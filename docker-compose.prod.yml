services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    networks:
      - prod
    environment:
      - NODE_ENV=production
      - VUE_APP_TITLE=${VUE_APP_TITLE}
    env_file:
      - .env
    expose:
      - "80"
    command: serve -s dist -l 80
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    networks:
      - prod
    expose:
      - "5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_ACCOUNT=${MAIL_ACCOUNT}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ADMIN=${MAIL_ADMIN}
      - FLASK_CONFIG=production
    env_file:
      - .env
    command: gunicorn -w 4 -b 0.0.0.0:5000 wsgi:app
    depends_on:
      - db
    restart: always

  nginx:
    build:
      context: ./nginx
    networks:
      - prod
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - frontend
      - backend
    restart: always

  db:
    image: mysql:8.0
    networks:
      - prod
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql
    restart: always

networks:
  prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  db_data: